@extends('layouts.app')

@section('content')

<!-- Banner -->
<section class="banner">
    <div style="width: 100%; margin-top: -100px" class="container">
        <img style="width: 100%" src={{asset('/img/BlogBanner.png')}} alt="">
        <a href="/courses" class="btn">Kh√°m ph√° ngay</a>
    </div>
</section>

<!-- Kh√≥a h·ªçc n·ªïi b·∫≠t -->
<section style="margin-top: -70px" class="featured-courses">
    <div class="container">
        <h2>B√†i vi·∫øt n·ªïi b·∫≠t</h2>
        <div class="swiper-container">
            <div class="grid-container">
                <div class="grid-item"><a href="/blog1"><img src ="https://i2.wp.com/riolamwritings.com/wp-content/uploads/2018/11/45626316_562416297520072_5302531130031865856_n.jpg?w=960&ssl=1"><p>‚ÄúNh·ªõ khi n√†o l√∫c ra ƒëi‚Ä¶‚Äù</p></a></div>
                <div class="grid-item"><img src ="https://i0.wp.com/riolamwritings.com/wp-content/uploads/2018/08/u23.jpg?w=1200&ssl=1"><p>ƒê·ªÉ t√¥i n√≥i cho c√°c √¥ng nghe v·ªÅ l√≤ng y√™u n∆∞·ªõc</p></div>
                <div class="grid-item"><img src ="https://i2.wp.com/riolamwritings.com/wp-content/uploads/2017/02/nadef7yjb_q-luis-del-rio-camacho.jpg?w=2000"><p>Con ƒê∆∞·ªùng B·ªè L·∫°i | The Road Not Taken ‚Äì Robert Frost</p></div>
                <div class="grid-item"><img src ="https://i0.wp.com/riolamwritings.com/wp-content/uploads/2012/04/pexels-photo-large-1.jpeg?w=890&ssl=1"><p>V·ªõi tay kh√¥ng ch·∫°m th·∫•y g√¨</p></div>
                <div class="grid-item"><img src ="https://i2.wp.com/riolamwritings.com/wp-content/uploads/2017/02/nadef7yjb_q-luis-del-rio-camacho.jpg?w=2000"><p>Con ƒê∆∞·ªùng B·ªè L·∫°i | The Road Not Taken ‚Äì Robert Frost</p></div>
                <div class="grid-item"><img src ="https://i0.wp.com/riolamwritings.com/wp-content/uploads/2012/04/pexels-photo-large-1.jpeg?w=890&ssl=1"><p>V·ªõi tay kh√¥ng ch·∫°m th·∫•y g√¨</p></div>
              </div>
            
            <div class="swiper-pagination"></div>
        </div>
        <script src="https://cdn.jsdelivr.net/npm/swiper@9/swiper-bundle.min.js"></script>
        <script>
            var swiper = new Swiper('.swiper-container', {
                loop: true, // Cho ph√©p l·∫∑p l·∫°i v√¥ h·∫°n
                autoplay: {
                    delay: 3000, // T·ª± ƒë·ªông chuy·ªÉn slide sau 3 gi√¢y
                    disableOnInteraction: false, // Ti·∫øp t·ª•c ch·∫°y ngay c·∫£ khi ng∆∞·ªùi d√πng t∆∞∆°ng t√°c
                },
                pagination: { 
                    el: '.swiper-pagination', 
                    clickable: true 
                },
                navigation: { 
                    nextEl: '.swiper-button-next', 
                    prevEl: '.swiper-button-prev' 
                },
                slidesPerView: 4, // Hi·ªÉn th·ªã 3 slide m·ªói l·∫ßn
                spaceBetween: 10, // Kho·∫£ng c√°ch gi·ªØa c√°c slide
                centeredSlides: false, // ƒê·∫£m b·∫£o slide lu√¥n cƒÉn gi·ªØa
                loopFillGroupWithBlank: true, // ƒêi·ªÅn c√°c kho·∫£ng tr·ªëng n·∫øu kh√¥ng ƒë·ªß slide
                breakpoints: {
                    1024: { slidesPerView: 4 }, // Tr√™n m√†n h√¨nh l·ªõn hi·ªÉn th·ªã 4 slide
                    768: { slidesPerView: 2 }, // Tr√™n m√†n h√¨nh nh·ªè h∆°n 768px, hi·ªÉn th·ªã 2 slide
                    480: { slidesPerView: 1 } // Tr√™n m√†n h√¨nh nh·ªè h∆°n 480px, hi·ªÉn th·ªã 1 slide
                }
            });
        </script>
        <div class="courses">
            @foreach ($featuredCourses as $course)
                <div class="course">
                    <img src="{{ $course->image ?? 'https://via.placeholder.com/300' }}" alt="{{ $course->title }}">
                    <h3>{{ $course->title }}</h3>
                    <p>{{ $course->description }}</p>
                    <p>Gi√°: {{ number_format($course->price) }} VNƒê</p>
                    <a href="/courses/{{ $course->id }}" class="btn">Xem chi ti·∫øt</a>
                </div>
            @endforeach
        </div>
    </div>
 <!-- N√∫t b·∫•m icon chat -->
 <button class="chat-button" onclick="toggleChat()">üí¨</button>

<div class="chat-box" id="chatBox">
  <div class="chat-header">H·ªó tr·ª£</div>
  <div class="chat-body" id="chatBody">
    <div class="message bot-message">Ch√†o b·∫°n! T√¥i l√† tr·ª£ l√Ω t∆∞ v·∫•n du h·ªçc Song Nguy√™n.</div>
<div class="message bot-message">
  T√¥i c√≥ th·ªÉ h·ªó tr·ª£ b·∫°n tr·ª±c ti·∫øp ho·∫∑c b·∫°n c√≥ th·ªÉ ch·ªçn c√°c n·ªôi dung:
  <br>1Ô∏è‚É£ N∆∞·ªõc du h·ªçc
  <br>2Ô∏è‚É£ Ng√†nh h·ªçc
  <br>3Ô∏è‚É£ Ngu·ªìn h·ªçc b·ªïng
</div>
  </div>
  <div class="chat-footer">
    <input type="text" id="userInput" placeholder="Nh·∫≠p tin nh·∫Øn..." onkeydown="handleInput(event)">
  </div>
</div>
<script>
 function showMainMenu() {
  const chatBody = document.getElementById('chatBody');
  if (!chatBody) return;

  const menuDiv = document.createElement('div');
  menuDiv.className = "message bot-message";
  menuDiv.innerHTML = `
    T√¥i c√≥ th·ªÉ h·ªó tr·ª£ b·∫°n tr·ª±c ti·∫øp ho·∫∑c b·∫°n c√≥ th·ªÉ ch·ªçn c√°c n·ªôi dung:
    <br>1Ô∏è‚É£ N∆∞·ªõc du h·ªçc
    <br>2Ô∏è‚É£ Ng√†nh h·ªçc
    <br>3Ô∏è‚É£ Ngu·ªìn h·ªçc b·ªïng
  `;

  chatBody.appendChild(menuDiv);
  chatBody.scrollTop = chatBody.scrollHeight;
}
</script>
<script>
  function toggleChat() {
    const chat = document.getElementById('chatBox');
    chat.style.display = chat.style.display === 'flex' ? 'none' : 'flex';
  }

  function handleInput(event) {
    if (event.key === "Enter") {
      const input = document.getElementById('userInput');
      const message = input.value.trim();
      if (message) {
        appendMessage("user", message);
        input.value = "";
        sendToBot(message);
      }
    }
  }

  function appendMessage(sender, message) {
    const chatBody = document.getElementById('chatBody');
    const msg = document.createElement('div');
    msg.className = `message ${sender === "user" ? "user-message" : "bot-message"}`;

  // N·∫øu l√† bot, t·ª± ƒë·ªông chuy·ªÉn xu·ªëng d√≤ng cho c√°c d·∫•u g·∫°ch ƒë·∫ßu d√≤ng
  if (sender === "bot") {
    message = message
      .replace(/\n/g, "<br>")                      // Xu·ªëng d√≤ng theo l·ªánh \n           
  }

  msg.innerHTML = message;
  chatBody.appendChild(msg);
  chatBody.scrollTop = chatBody.scrollHeight;

  }
 
  async function sendToBot(message) {
    if (!chatBody) return;

  // Ki·ªÉm tra c√°c l·ª±a ch·ªçn ƒë∆°n gi·∫£n tr∆∞·ªõc khi g·ªçi API
  const trimmed = message.trim();
  if (["1", "2", "3"].includes(trimmed)) {
    let reply = "";
    if (trimmed === "1") reply = "B·∫°n mu·ªën t√¨m hi·ªÉu v·ªÅ du h·ªçc ·ªü ch√¢u l·ª•c ho·∫∑c qu·ªëc gia n√†o? V√≠ d·ª•: Ch√¢u l·ª•c: Ch√¢u √Çu, Ch√¢u M·ªπ; Qu·ªëc gia: M·ªπ, Canada...";
    if (trimmed === "2") reply = "B·∫°n quan t√¢m ƒë·∫øn ng√†nh h·ªçc n√†o? V√≠ d·ª•: C√¥ng ngh·ªá th√¥ng tin, Kinh doanh, Y khoa...";
    if (trimmed === "3") reply = "B·∫°n mu·ªën t√¨m hi·ªÉu h·ªçc b·ªïng t·ª´ ch√≠nh ph·ªß, tr∆∞·ªùng ƒë·∫°i h·ªçc hay t·ªï ch·ª©c n√†o?";
    appendMessage("bot", reply);
    return;
  }
    // üëâ N·∫øu ng∆∞·ªùi d√πng g√µ "menu" ‚Üí hi·ªán l·∫°i menu
    if (trimmed.toLowerCase() === "menu") {
    showMainMenu();
    return;
  }

    const loadingMsg = document.createElement('div');
    loadingMsg.className = "message bot-message";
    loadingMsg.textContent = "ü§ñ ƒêang x·ª≠ l√Ω...";
    loadingMsg.id = "loading-message";
    chatBody.appendChild(loadingMsg);
    chatBody.scrollTop = chatBody.scrollHeight;

    try {
      const response = await fetch("https://openrouter.ai/api/v1/chat/completions", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          "Authorization": "Bearer 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",
          "HTTP-Referer": "http://localhost",
          "X-Title": "Test Chatbot"
        },
        body: JSON.stringify({
          model: "openai/gpt-3.5-turbo",
          // max_tokens: 500,
          messages: [
            {
        role: "system",
        content: "B·∫°n l√† chuy√™n gia t∆∞ v·∫•n du h·ªçc. Ch·ªâ tr·∫£ l·ªùi c√°c c√¢u h·ªèi li√™n quan ƒë·∫øn du h·ªçc. QUY T·∫ÆC TR·∫¢ L·ªúI:- Tr·∫£ l·ªùi ng·∫Øn g·ªçn, r√µ r√†ng, kh√¥ng v∆∞·ª£t qu√° 4-5 √Ω m·ªói l·∫ßn.- Tr√¨nh b√†y t·ª´ng √Ω b·∫±ng d·∫•u g·∫°ch ƒë·∫ßu d√≤ng (-) ho·∫∑c s·ªë th·ª© t·ª± (1., 2., 3.)- Kh√¥ng ƒë∆∞a ra qu√° nhi·ªÅu th√¥ng tin m·ªôt l√∫c. N·∫øu c√¢u tr·∫£ l·ªùi d√†i, ch·ªâ tr·∫£ l·ªùi ph·∫ßn ƒë·∫ßu v√† g·ª£i √Ω ng∆∞·ªùi d√πng h·ªèi ti·∫øp.- Tr√°nh l·∫∑p l·∫°i, tr√°nh vƒÉn b·∫£n d√†i li·ªÅn m·∫°ch qu√° 5 d√≤ng.- N·∫øu ng∆∞·ªùi d√πng h·ªèi r·ªông, h√£y chia nh·ªè c√¢u h·ªèi v√† h·ªèi l·∫°i h·ªç mu·ªën bi·∫øt ph·∫ßn n√†o tr∆∞·ªõc."
          },
          { role: "user", content: message }]
        })
      });
      const data = await response.json();

    console.log("üî• Ph·∫£n h·ªìi t·ª´ OpenRouter:", data); // Debug xem c√≥ g√¨ tr·∫£ v·ªÅ

    const loadingElem = document.getElementById("loading-message");
    if (loadingElem) loadingElem.remove();

    if (response.ok && data.choices && data.choices.length > 0 && data.choices[0].message?.content) {
      const reply = data.choices[0].message.content;
      appendMessage("bot", reply);
    } else {
      appendMessage("bot", "ü§ñ Xin l·ªói, hi·ªán t·∫°i t√¥i ch∆∞a c√≥ ph·∫£n h·ªìi ph√π h·ª£p.");
    }
  } catch (error) {
    const loadingElem = document.getElementById("loading-message");
    if (loadingElem) loadingElem.remove();
    appendMessage("bot", "‚ö†Ô∏è C√≥ l·ªói khi k·∫øt n·ªëi v·ªõi chatbot.");
    console.error("‚ùå L·ªói fetch:", error);
  }
  const reply = data.choices?.[0]?.message?.content || "Kh√¥ng c√≥ ph·∫£n h·ªìi.";

// C·∫Øt ƒëo·∫°n qu√° d√†i (v√≠ d·ª•: 1000 k√Ω t·ª±)
const maxLength = 700;
const finalReply = reply.length > maxLength ? reply.slice(0, maxLength) + "...\n‚úÇÔ∏è Tr·∫£ l·ªùi qu√° d√†i, b·∫°n mu·ªën xem ti·∫øp kh√¥ng?" : reply;

appendMessage("bot", finalReply);

  }

  </script>
</section>

<!-- Gi·ªõi thi·ªáu -->
<section class="about">
    <div class="container">
        <h2>V·ªÅ ch√∫ng t√¥i</h2>
        <p>SkillsBridge gi√∫p b·∫°n ti·∫øp c·∫≠n c√°c kh√≥a h·ªçc ch·∫•t l∆∞·ª£ng cao t·ª´ gi·∫£ng vi√™n chuy√™n nghi·ªáp, n√¢ng cao k·ªπ nƒÉng v√† ph√°t tri·ªÉn s·ª± nghi·ªáp.</p>
        <a href="/about" class="btn">T√¨m hi·ªÉu th√™m</a>
    </div>
</section>

@endsection
